#include "Plans/GameStrategy/OwnStandards/GenericOwnStandard1426697860439.h"
using namespace alica;
/*PROTECTED REGION ID(eph1426697860439) ENABLED START*/ //Add additional using directives here
/*PROTECTED REGION END*/
namespace alicaAutogenerated
{
    //Plan:GenericOwnStandard

    /* generated comment
     
     Task: DefaultTask  -> EntryPoint-ID: 1426697860441

     */
    shared_ptr<UtilityFunction> UtilityFunction1426697860439::getUtilityFunction(Plan* plan)
    {
        /*PROTECTED REGION ID(1426697860439) ENABLED START*/

        shared_ptr < UtilityFunction > defaultFunction = make_shared < DefaultUtilityFunction > (plan);
        return defaultFunction;

        /*PROTECTED REGION END*/
    }

    //State: Positioning in Plan: GenericOwnStandard

    /*
     *		
     * Transition:
     *   - Name: MISSING_NAME, ConditionString: , Comment : Situation == Start 
     *
     * Plans in State: 
     *
     * Tasks: 
     *   - DefaultTask (1225112227903) (Entrypoint: 1426697860441)
     *
     * States:
     *   - Positioning (1426697860440)
     *   - Execution (1426698509635)
     *   - NewSuccessState (1426698516012)
     *
     * Vars:
     */
    bool TransitionCondition1426698520600::evaluate(shared_ptr<RunningPlan> rp)
    {
        /*PROTECTED REGION ID(1426698518986) ENABLED START*/
        return false;
        /*PROTECTED REGION END*/

    }

    //State: Execution in Plan: GenericOwnStandard

    /*
     *		
     * Transition:
     *   - Name: MISSING_NAME, ConditionString: , Comment : anyChildSuccess 
     *
     * Plans in State: 
     *
     * Tasks: 
     *   - DefaultTask (1225112227903) (Entrypoint: 1426697860441)
     *
     * States:
     *   - Positioning (1426697860440)
     *   - Execution (1426698509635)
     *   - NewSuccessState (1426698516012)
     *
     * Vars:
     */
    bool TransitionCondition1426698518818::evaluate(shared_ptr<RunningPlan> rp)
    {
        /*PROTECTED REGION ID(1426698517666) ENABLED START*/
        return false;
        /*PROTECTED REGION END*/

    }

//State: NewSuccessState in Plan: GenericOwnStandard

}
