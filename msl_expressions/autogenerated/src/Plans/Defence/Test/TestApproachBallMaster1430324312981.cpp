#include "Plans/Defence/Test/TestApproachBallMaster1430324312981.h"
using namespace alica;
/*PROTECTED REGION ID(eph1430324312981) ENABLED START*/ //Add additional using directives here
/*PROTECTED REGION END*/
namespace alicaAutogenerated
{
    //Plan:TestApproachBallMaster

    /* generated comment
     
     Task: DefaultTask  -> EntryPoint-ID: 1430324312983

     */
    shared_ptr<UtilityFunction> UtilityFunction1430324312981::getUtilityFunction(Plan* plan)
    {
        /*PROTECTED REGION ID(1430324312981) ENABLED START*/

        shared_ptr < UtilityFunction > defaultFunction = make_shared < DefaultUtilityFunction > (plan);
        return defaultFunction;

        /*PROTECTED REGION END*/
    }

    //State: Stop in Plan: TestApproachBallMaster

    /*
     *		
     * Transition:
     *   - Name: MISSING_NAME, ConditionString: , Comment : Situation==Start 
     *
     * Plans in State: 				
     *   - Plan - (Name): StopDefault, (PlanID): 1413992626194 
     *
     * Tasks: 
     *   - DefaultTask (1225112227903) (Entrypoint: 1430324312983)
     *
     * States:
     *   - Stop (1430324312982)
     *   - AttackOpp (1430324405240)
     *
     * Vars:
     */
    bool TransitionCondition1430324477939::evaluate(shared_ptr<RunningPlan> rp)
    {
        /*PROTECTED REGION ID(1430324473378) ENABLED START*/
        return wm->game.checkSituation(msl::Situation::Start);
        /*PROTECTED REGION END*/

    }

    //State: AttackOpp in Plan: TestApproachBallMaster

    /*
     *		
     * Transition:
     *   - Name: MISSING_NAME, ConditionString: , Comment : Situation == Stop 
     *
     * Plans in State: 				
     *   - Plan - (Name): AttackOppDefault, (PlanID): 1430324680117 
     *
     * Tasks: 
     *   - DefaultTask (1225112227903) (Entrypoint: 1430324312983)
     *
     * States:
     *   - Stop (1430324312982)
     *   - AttackOpp (1430324405240)
     *
     * Vars:
     */
    bool TransitionCondition1431012032315::evaluate(shared_ptr<RunningPlan> rp)
    {
        /*PROTECTED REGION ID(1431012024235) ENABLED START*/
    	return wm->game.checkSituation(msl::Situation::Stop);
        /*PROTECTED REGION END*/

    }

}
