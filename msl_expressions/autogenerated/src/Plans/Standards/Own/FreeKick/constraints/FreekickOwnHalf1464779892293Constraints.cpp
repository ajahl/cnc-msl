#include "Plans/Standards/Own/FreeKick/constraints/FreekickOwnHalf1464779892293Constraints.h"
using namespace std;
using namespace alica;
/*PROTECTED REGION ID(ch1464779892293) ENABLED START*/
//Add additional using directives here
/*PROTECTED REGION END*/

namespace alicaAutogenerated
{
    //Plan:FreekickOwnHalf

    /*		
     * Tasks: 
     * - EP:1464779892295 : ExecuteStandard (1439997010902)
     * - EP:1464780621150 : ReceiveStandard (1439997023446)
     * - EP:1464780622782 : AlternativeReceive (1462360858945)
     * - EP:1464780624383 : Block (1461237765109)
     *
     * States:
     * - AlginExec (1464779892294)
     * - AlginRec (1464780728003)
     * - AlignAlternativeRec (1464780736932)
     * - Block (1464780761597)
     * - GrabBall (1464780991973)
     * - Pass (1464780997998)
     * - Wait (1464781012255)
     * - Receive (1464781391707)
     * - Success (1464781475476)
     * - ReceiveAlternative (1464781530341)
     * - SuccessAlternative (1464781564174)
     *
     * Vars:
     */

    /*
     * RuntimeCondition - (Name): NewRuntimeCondition
     * (ConditionString): 
     * Static Variables: []
     * Domain Variables:

     * forall agents in Block let v = [x, y] 

     */
    void Constraint1464780785574::getConstraint(shared_ptr<ConstraintDescriptor> c, shared_ptr<RunningPlan> rp)
    {
        /*PROTECTED REGION ID(cc1464780785574) ENABLED START*/
        /*PROTECTED REGION END*/
    }

// State: AlginExec

// State: AlginExec

// State: AlginRec

// State: AlginRec

// State: AlignAlternativeRec

// State: AlignAlternativeRec

// State: Block

// State: Block

// State: GrabBall

// State: GrabBall

// State: Pass

// State: Pass

// State: Wait

// State: Wait

// State: Receive

// State: Receive

// State: Success

// State: Success

// State: ReceiveAlternative

// State: ReceiveAlternative

// State: SuccessAlternative

// State: SuccessAlternative

}
