#include "RTIMULib.h"

RTIMUBBB::RTIMUBBB() {
	//  Using RTIMULib here allows it to use the .ini file generated by RTIMULibDemo.
	//  Or, you can create the .ini in some other directory by using:
	//      RTIMUSettings *settings = new RTIMUSettings("<directory path>", "RTIMULib");
	//  where <directory path> is the path to where the .ini file is to be loaded/saved

	RTIMUSettings *settings = new RTIMUSettings("/home/cn/cnws/src/etc/", "RTIMULib");
	imu = new RTIMU::createIMU(settings);

	if ((imu == NULL) || (imu->IMUType() == RTIMU_TYPE_NULL)) {
		printf("No IMU found\n");
	}

	//  This is an opportunity to manually override any settings before the call IMUInit

	//  set up IMU

	imu->IMUInit();

	//  this is a convenient place to change fusion parameters

	imu->setSlerpPower(0.02);
	imu->setGyroEnable(true);
	imu->setAccelEnable(true);
	imu->setCompassEnable(true);

	oldData = imu->getIMUData();

	rateTimer = RTMath::currentUSecsSinceEpoch();
}

RTIMUBBB::~RTIMUBBB() {
	delete imu;
}

void RTIMUBBB::getNewData() {
	oldData = imu->getIMUData();
	sampleCount++;

	uint64_t i = RTMath::currentUSecsSinceEpoch();
	timeDifference = i - now;
	now = i;

	//  update rate every second
	if ((now - rateTimer) > 1000000) {
		sampleRate = sampleCount;
		sampleCount = 0;
		rateTimer += 1000000;
	}
}

msl_msgs::Point3dInfo RTIMUBBB::getAcceleration() {
	geometry::CNPoint3D acceleration;
	acceleration.x = (float) oldData.accel.x();
	acceleration.y = (float) oldData.accel.y();
	acceleration.z = (float) oldData.accel.z();
	return acceleration;
}

msl_msgs::Point3dInfo RTIMUBBB::getMagnetfield() {
	geometry::CNPoint3D magnet;
	magnet.x = (float) oldData.compass.x();
	magnet.y = (float) oldData.compass.y();
	magnet.z = (float) oldData.compass.z();
	return magnet;
}

msl_msgs::Point3dInfo RTIMUBBB::getRotation() {
	geometry::CNPoint3D rotation;
	rotation.x = (float) oldData.gyro.x();
	rotation.y = (float) oldData.gyro.y();
	rotation.z = (float) oldData.gyro.z();
	return rotation;
}

uint64_t RTIMUBBB::getDataTime() {
	return now;
}

uint64_t RTIMUBBB::getTimeDifference() {
	return timeDifference;
}
